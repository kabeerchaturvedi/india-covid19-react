{"version":3,"sources":["components/accordion/index.js","pages/home/index.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","heading","fontSize","typography","pxToRem","secondaryHeading","color","palette","text","secondary","icon","verticalAlign","height","details","alignItems","column","flexBasis","helper","borderLeft","divider","padding","spacing","link","primary","main","textDecoration","AccordionComponent","data","classes","className","Accordion","defaultExpanded","AccordionSummary","expandIcon","aria-controls","id","Typography","city","category","subCategory","name","description","address","phone1","phone2","phone3","AccordionActions","Button","size","withGoogleSheets","stateData","db","Maharashtra","useState","selectedFilters","setSelectedFilters","filterChange","event","filterName","target","newFilters","index","indexOf","splice","uniqueOptions","uniqBy","FormGroup","row","map","option","FormControlLabel","control","Checkbox","onChange","checked","includes","label","renderFilters","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSAaMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,QAETC,QAAS,CACPC,SAAUJ,EAAMK,WAAWC,QAAQ,KAErCC,iBAAkB,CAChBH,SAAUJ,EAAMK,WAAWC,QAAQ,IACnCE,MAAOR,EAAMS,QAAQC,KAAKC,WAE5BC,KAAM,CACJC,cAAe,SACfC,OAAQ,GACRZ,MAAO,IAETa,QAAS,CACPC,WAAY,UAEdC,OAAQ,CACNC,UAAW,UAEbC,OAAQ,CACNC,WAAW,aAAD,OAAepB,EAAMS,QAAQY,SACvCC,QAAStB,EAAMuB,QAAQ,EAAG,IAE5BC,KAAM,CACJhB,MAAOR,EAAMS,QAAQgB,QAAQC,KAC7BC,eAAgB,OAChB,UAAW,CACTA,eAAgB,kBAKP,SAASC,EAAT,GAAuC,IAATC,EAAQ,EAARA,KACrCC,EAAUhC,IAEhB,OACE,qBAAKiC,UAAWD,EAAQ7B,KAAxB,SACE,eAAC+B,EAAA,EAAD,CAAWC,iBAAe,EAA1B,UACE,eAACC,EAAA,EAAD,CACEC,WAAY,cAAC,IAAD,IACZC,gBAAc,kBACdC,GAAG,iBAHL,UAKE,qBAAKN,UAAWD,EAAQb,OAAxB,SACE,eAACqB,EAAA,EAAD,CAAYP,UAAWD,EAAQ3B,QAA/B,cAA0C0B,EAAKU,UAEjD,qBAAKR,UAAWD,EAAQb,OAAxB,SACE,eAACqB,EAAA,EAAD,CAAYP,UAAWD,EAAQ3B,QAA/B,UACG,IACA0B,EAAKW,cAGV,qBAAKT,UAAWD,EAAQb,OAAxB,SACE,eAACqB,EAAA,EAAD,CAAYP,UAAWD,EAAQ3B,QAA/B,UACG,IACA0B,EAAKY,iBAGV,qBAAKV,UAAWD,EAAQb,OAAxB,SACE,cAACqB,EAAA,EAAD,CAAYP,UAAWD,EAAQvB,iBAA/B,SACGsB,EAAKa,SAGV,qBAAKX,UAAWD,EAAQb,OAAxB,SACE,cAACqB,EAAA,EAAD,CAAYP,UAAWD,EAAQvB,iBAA/B,SACGsB,EAAKc,gBAGV,qBAAKZ,UAAWD,EAAQb,OAAxB,SACE,cAACqB,EAAA,EAAD,CAAYP,UAAWD,EAAQvB,iBAA/B,SACGsB,EAAKe,eAKZ,eAACN,EAAA,EAAD,WACE,8BAAMT,EAAKgB,SACX,8BAAMhB,EAAKiB,SACX,8BAAMjB,EAAKkB,YAGb,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAb,0B,iEC/BKC,6BAAiB,cAAjBA,EA3DF,SAAC,GAAY,IAChBC,EADe,EAATC,GACSC,YACrB,EAA8CC,mBAAS,IAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KAEMC,EAAe,SAACC,GAClB,IAAMC,EAAaD,EAAME,OAAOnB,KAC5BoB,EAAU,YAAON,GACfO,EAAQD,EAAWE,QAAQJ,GAC7BG,GAAS,EACTD,EAAWG,OAAOF,EAAO,GAEzBD,EAAU,sBAAOA,GAAP,CAAmBF,IAEjCH,EAAmBK,IA4BvB,OACI,gCA1BkB,WAClB,IAAMI,EAAgBC,IAAOf,EAAW,YAExC,OACI,cAACgB,EAAA,EAAD,CAAWC,KAAG,EAAd,SACKH,EAAcI,KAAI,SAACC,EAAQR,GAAT,OACf,cAACS,EAAA,EAAD,CAEIC,QACI,cAACC,EAAA,EAAD,CACIC,SAAUjB,EACVkB,QAASpB,EAAgBqB,SACrBN,EAAO/B,UAEXE,KAAM6B,EAAO/B,SACbhC,MAAM,YAGdsE,MAAOP,EAAO/B,UAZlB,iBACmBuB,SAoB1BgB,GACAC,IAAO5B,GAAW,SAACvB,GAAD,OACf2B,EAAgBqB,SAAShD,EAAKW,aAChC8B,KAAI,SAACzC,EAAMkC,GAAP,OACF,cAACnC,EAAD,CAA4CC,KAAMA,GAAlD,iBAAmCkC,aC5CpCkB,MARf,WACE,OACE,cAAC,IAAD,UACE,cAAC,EAAD,OCMSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d01ddb72.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionActions from \"@material-ui/core/AccordionActions\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: \"bottom\",\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: \"center\",\n  },\n  column: {\n    flexBasis: \"33.33%\",\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: \"none\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n}));\n\nexport default function AccordionComponent({ data }) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Accordion defaultExpanded>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1c-content\"\n          id=\"panel1c-header\"\n        >\n          <div className={classes.column}>\n            <Typography className={classes.heading}> {data.city}</Typography>\n          </div>\n          <div className={classes.column}>\n            <Typography className={classes.heading}>\n              {\" \"}\n              {data.category}\n            </Typography>\n          </div>\n          <div className={classes.column}>\n            <Typography className={classes.heading}>\n              {\" \"}\n              {data.subCategory}\n            </Typography>\n          </div>\n          <div className={classes.column}>\n            <Typography className={classes.secondaryHeading}>\n              {data.name}\n            </Typography>\n          </div>\n          <div className={classes.column}>\n            <Typography className={classes.secondaryHeading}>\n              {data.description}\n            </Typography>\n          </div>\n          <div className={classes.column}>\n            <Typography className={classes.secondaryHeading}>\n              {data.address}\n            </Typography>\n          </div>\n        </AccordionSummary>\n\n        <Typography>\n          <div>{data.phone1}</div>\n          <div>{data.phone2}</div>\n          <div>{data.phone3}</div>\n        </Typography>\n\n        <AccordionActions>\n          <Button size=\"small\">Close</Button>\n        </AccordionActions>\n      </Accordion>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withGoogleSheets } from \"react-db-google-sheets\";\nimport AccordionComponent from \"../../components/accordion\";\nimport { FormGroup, FormControlLabel, Checkbox } from \"@material-ui/core\";\nimport uniqBy from \"lodash.uniqby\";\nimport filter from \"lodash.filter\";\n\nconst Home = ({ db }) => {\n    const stateData = db.Maharashtra;\n    const [selectedFilters, setSelectedFilters] = useState([]);\n\n    const filterChange = (event) => {\n        const filterName = event.target.name;\n        let newFilters = [...selectedFilters];\n        const index = newFilters.indexOf(filterName);\n        if (index > -1) {\n            newFilters.splice(index, 1);\n        } else {\n            newFilters = [...newFilters, filterName];\n        }\n        setSelectedFilters(newFilters);\n    };\n\n    const renderFilters = () => {\n        const uniqueOptions = uniqBy(stateData, \"category\");\n\n        return (\n            <FormGroup row>\n                {uniqueOptions.map((option, index) => (\n                    <FormControlLabel\n                        key={`filter-${index}`}\n                        control={\n                            <Checkbox\n                                onChange={filterChange}\n                                checked={selectedFilters.includes(\n                                    option.category\n                                )}\n                                name={option.category}\n                                color=\"primary\"\n                            />\n                        }\n                        label={option.category}\n                    />\n                ))}\n            </FormGroup>\n        );\n    };\n\n    return (\n        <div>\n            {renderFilters()}\n            {filter(stateData, (data) =>\n                selectedFilters.includes(data.category)\n            ).map((data, index) => (\n                <AccordionComponent key={`filter-${index}`} data={data} />\n            ))}\n        </div>\n    );\n};\n\nHome.propTypes = {\n    db: PropTypes.shape({\n        sheet1: PropTypes.arrayOf(PropTypes.object),\n    }),\n};\n\nexport default withGoogleSheets(\"Maharashtra\")(Home);\n","import GoogleSheetsProvider from \"react-db-google-sheets\";\nimport Home from \"./pages/home\";\n\nfunction App() {\n  return (\n    <GoogleSheetsProvider>\n      <Home />\n    </GoogleSheetsProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}